#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC) -I/usr/include/vtk-5.8 -I/usr/include/eigen3 -I/usr/local/include/pcl-1.8 -I/usr/local/include/pcl-1.8/pcl/surface -I/usr/local/include/boost
CFLAGS_DEBUG = $(CFLAGS) -std=c++11 -g -frounding-math
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)-l/usr/lib/libvtkalglib.so -l/usr/lib/libvtkCharts.so -l/usr/lib/libvtkCommon.so -l/usr/lib/libvtkDICOMParser.so -l/usr/lib/libvtkexoIIc.so -l/usr/lib/libvtkFiltering.so -l/usr/lib/libvtkftgl.so -l/usr/lib/libvtkGenericFiltering.so -l/usr/lib/libvtkGeovis.so -l/usr/lib/libvtkGraphics.so -l/usr/lib/libvtkHybrid.so -l/usr/lib/libvtkImaging.so -l/usr/lib/libvtkInfovis.so -l/usr/lib/libvtkIO.so -l/usr/lib/libvtkmetaio.so -l/usr/lib/libvtkParallel.so -l/usr/lib/libvtkproj4.so -l/usr/lib/libvtkQtChart.so -l/usr/lib/libvtkRendering.so -l/usr/lib/libvtksys.so -l/usr/lib/libvtkverdict.so -l/usr/lib/libvtkViews.so -l/usr/lib/libvtkVolumeRendering.so -l/usr/lib/libvtkWidgets.so -l/usr/local/lib/libpcl_2d.so -l/usr/local/lib/libpcl_common.so -l/usr/local/lib/libpcl_features.so -l/usr/local/lib/libpcl_filters.so -l/usr/local/lib/libpcl_io.so -l/usr/local/lib/libpcl_io_ply.so -l/usr/local/lib/libpcl_kdtree.so -l/usr/local/lib/libpcl_keypoints.so -l/usr/local/lib/libpcl_ml.so -l/usr/local/lib/libpcl_octree.so -l/usr/local/lib/libpcl_outofcore.so -l/usr/local/lib/libpcl_people.so -l/usr/local/lib/libpcl_recognition.so -l/usr/local/lib/libpcl_registration.so -l/usr/local/lib/libpcl_sample_consensus.so -l/usr/local/lib/libpcl_search.so -l/usr/local/lib/libpcl_segmentation.so -l/usr/local/lib/libpcl_stereo.so -l/usr/local/lib/libpcl_surface.so -l/usr/local/lib/libpcl_tracking.so -l/usr/local/lib/libpcl_visualization.so -l/usr/lib/libCGAL.so -l/usr/lib/libCGAL_Core.so -l/usr/lib/libCGAL_ImageIO.so -l/usr/lib/x86_64-linux-gnu/libopencv_calib3d.so -l/usr/lib/x86_64-linux-gnu/libopencv_contrib.so -l/usr/lib/x86_64-linux-gnu/libopencv_core.so -l/usr/lib/x86_64-linux-gnu/libopencv_features2d.so -l/usr/lib/x86_64-linux-gnu/libopencv_flann.so -l/usr/lib/x86_64-linux-gnu/libopencv_gpu.so -l/usr/lib/x86_64-linux-gnu/libopencv_highgui.so -l/usr/lib/x86_64-linux-gnu/libopencv_imgproc.so -l/usr/lib/x86_64-linux-gnu/libopencv_legacy.so -l/usr/lib/x86_64-linux-gnu/libopencv_ml.so -l/usr/lib/x86_64-linux-gnu/libopencv_objdetect.so -l/usr/lib/x86_64-linux-gnu/libopencv_ocl.so -l/usr/lib/x86_64-linux-gnu/libopencv_photo.so -l/usr/lib/x86_64-linux-gnu/libopencv_stitching.so -l/usr/lib/x86_64-linux-gnu/libopencv_superres.so -l/usr/lib/x86_64-linux-gnu/libopencv_ts.so -l/usr/lib/x86_64-linux-gnu/libopencv_video.so -l/usr/lib/x86_64-linux-gnu/libopencv_videostab.so -l/usr/local/lib/libboost_atomic.so -l/usr/local/lib/libboost_chrono.so -l/usr/local/lib/libboost_container.so -l/usr/local/lib/libboost_context.so -l/usr/local/lib/libboost_coroutine.so -l/usr/local/lib/libboost_date_time.so -l/usr/local/lib/libboost_filesystem.so -l/usr/local/lib/libboost_graph.so -l/usr/local/lib/libboost_iostreams.so -l/usr/local/lib/libboost_locale.so -l/usr/local/lib/libboost_log.so -l/usr/local/lib/libboost_log_setup.so -l/usr/local/lib/libboost_math_c99.so -l/usr/local/lib/libboost_math_c99f.so -l/usr/local/lib/libboost_math_c99l.so -l/usr/local/lib/libboost_math_tr1.so -l/usr/local/lib/libboost_math_tr1f.so -l/usr/local/lib/libboost_math_tr1l.so -l/usr/local/lib/libboost_prg_exec_monitor.so -l/usr/local/lib/libboost_program_options.so -l/usr/local/lib/libboost_random.so -l/usr/local/lib/libboost_regex.so -l/usr/local/lib/libboost_serialization.so -l/usr/local/lib/libboost_signals.so -l/usr/local/lib/libboost_system.so -l/usr/local/lib/libboost_thread.so -l/usr/local/lib/libboost_timer.so -l/usr/local/lib/libboost_unit_test_framework.so -l/usr/local/lib/libboost_wave.so -l/usr/local/lib/libboost_wserialization.so
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/SorghumMeshPhenotyper_v5

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/SorghumMeshPhenotyper_v5

OBJ_DEBUG = $(OBJDIR_DEBUG)/segmentation.o $(OBJDIR_DEBUG)/meshGeneration.o $(OBJDIR_DEBUG)/meshMeasurements.o $(OBJDIR_DEBUG)/plantSegmentationDataContainer.o $(OBJDIR_DEBUG)/pointCloudFromDepthImage.o $(OBJDIR_DEBUG)/supervoxel_construction.o $(OBJDIR_DEBUG)/tupleTriplet.o $(OBJDIR_DEBUG)/visualizer_helper.o $(OBJDIR_DEBUG)/features.o $(OBJDIR_DEBUG)/SampleConsensusPrerejective.o $(OBJDIR_DEBUG)/boundingBox.o $(OBJDIR_DEBUG)/dijkstraPathfinding.o $(OBJDIR_DEBUG)/IterativeClosestPoint.o $(OBJDIR_DEBUG)/inputParams.o $(OBJDIR_DEBUG)/loggingHelper.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/measurementDataContainer.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/segmentation.o $(OBJDIR_RELEASE)/meshGeneration.o $(OBJDIR_RELEASE)/meshMeasurements.o $(OBJDIR_RELEASE)/plantSegmentationDataContainer.o $(OBJDIR_RELEASE)/pointCloudFromDepthImage.o $(OBJDIR_RELEASE)/supervoxel_construction.o $(OBJDIR_RELEASE)/tupleTriplet.o $(OBJDIR_RELEASE)/visualizer_helper.o $(OBJDIR_RELEASE)/features.o $(OBJDIR_RELEASE)/SampleConsensusPrerejective.o $(OBJDIR_RELEASE)/boundingBox.o $(OBJDIR_RELEASE)/dijkstraPathfinding.o $(OBJDIR_RELEASE)/IterativeClosestPoint.o $(OBJDIR_RELEASE)/inputParams.o $(OBJDIR_RELEASE)/loggingHelper.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/measurementDataContainer.o

all: debug

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/segmentation.o: segmentation.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c segmentation.cpp -o $(OBJDIR_DEBUG)/segmentation.o

$(OBJDIR_DEBUG)/meshGeneration.o: meshGeneration.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c meshGeneration.cpp -o $(OBJDIR_DEBUG)/meshGeneration.o

$(OBJDIR_DEBUG)/meshMeasurements.o: meshMeasurements.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c meshMeasurements.cpp -o $(OBJDIR_DEBUG)/meshMeasurements.o

$(OBJDIR_DEBUG)/plantSegmentationDataContainer.o: plantSegmentationDataContainer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c plantSegmentationDataContainer.cpp -o $(OBJDIR_DEBUG)/plantSegmentationDataContainer.o

$(OBJDIR_DEBUG)/pointCloudFromDepthImage.o: pointCloudFromDepthImage.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c pointCloudFromDepthImage.cpp -o $(OBJDIR_DEBUG)/pointCloudFromDepthImage.o

$(OBJDIR_DEBUG)/supervoxel_construction.o: supervoxel_construction.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c supervoxel_construction.cpp -o $(OBJDIR_DEBUG)/supervoxel_construction.o

$(OBJDIR_DEBUG)/tupleTriplet.o: tupleTriplet.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c tupleTriplet.cpp -o $(OBJDIR_DEBUG)/tupleTriplet.o

$(OBJDIR_DEBUG)/visualizer_helper.o: visualizer_helper.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c visualizer_helper.cpp -o $(OBJDIR_DEBUG)/visualizer_helper.o

$(OBJDIR_DEBUG)/features.o: features.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c features.cpp -o $(OBJDIR_DEBUG)/features.o

$(OBJDIR_DEBUG)/SampleConsensusPrerejective.o: SampleConsensusPrerejective.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c SampleConsensusPrerejective.cpp -o $(OBJDIR_DEBUG)/SampleConsensusPrerejective.o

$(OBJDIR_DEBUG)/boundingBox.o: boundingBox.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c boundingBox.cpp -o $(OBJDIR_DEBUG)/boundingBox.o

$(OBJDIR_DEBUG)/dijkstraPathfinding.o: dijkstraPathfinding.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c dijkstraPathfinding.cpp -o $(OBJDIR_DEBUG)/dijkstraPathfinding.o

$(OBJDIR_DEBUG)/IterativeClosestPoint.o: IterativeClosestPoint.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c IterativeClosestPoint.cpp -o $(OBJDIR_DEBUG)/IterativeClosestPoint.o

$(OBJDIR_DEBUG)/inputParams.o: inputParams.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c inputParams.cpp -o $(OBJDIR_DEBUG)/inputParams.o

$(OBJDIR_DEBUG)/loggingHelper.o: loggingHelper.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c loggingHelper.cpp -o $(OBJDIR_DEBUG)/loggingHelper.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/measurementDataContainer.o: measurementDataContainer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c measurementDataContainer.cpp -o $(OBJDIR_DEBUG)/measurementDataContainer.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/segmentation.o: segmentation.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c segmentation.cpp -o $(OBJDIR_RELEASE)/segmentation.o

$(OBJDIR_RELEASE)/meshGeneration.o: meshGeneration.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c meshGeneration.cpp -o $(OBJDIR_RELEASE)/meshGeneration.o

$(OBJDIR_RELEASE)/meshMeasurements.o: meshMeasurements.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c meshMeasurements.cpp -o $(OBJDIR_RELEASE)/meshMeasurements.o

$(OBJDIR_RELEASE)/plantSegmentationDataContainer.o: plantSegmentationDataContainer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c plantSegmentationDataContainer.cpp -o $(OBJDIR_RELEASE)/plantSegmentationDataContainer.o

$(OBJDIR_RELEASE)/pointCloudFromDepthImage.o: pointCloudFromDepthImage.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c pointCloudFromDepthImage.cpp -o $(OBJDIR_RELEASE)/pointCloudFromDepthImage.o

$(OBJDIR_RELEASE)/supervoxel_construction.o: supervoxel_construction.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c supervoxel_construction.cpp -o $(OBJDIR_RELEASE)/supervoxel_construction.o

$(OBJDIR_RELEASE)/tupleTriplet.o: tupleTriplet.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tupleTriplet.cpp -o $(OBJDIR_RELEASE)/tupleTriplet.o

$(OBJDIR_RELEASE)/visualizer_helper.o: visualizer_helper.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c visualizer_helper.cpp -o $(OBJDIR_RELEASE)/visualizer_helper.o

$(OBJDIR_RELEASE)/features.o: features.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c features.cpp -o $(OBJDIR_RELEASE)/features.o

$(OBJDIR_RELEASE)/SampleConsensusPrerejective.o: SampleConsensusPrerejective.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c SampleConsensusPrerejective.cpp -o $(OBJDIR_RELEASE)/SampleConsensusPrerejective.o

$(OBJDIR_RELEASE)/boundingBox.o: boundingBox.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c boundingBox.cpp -o $(OBJDIR_RELEASE)/boundingBox.o

$(OBJDIR_RELEASE)/dijkstraPathfinding.o: dijkstraPathfinding.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c dijkstraPathfinding.cpp -o $(OBJDIR_RELEASE)/dijkstraPathfinding.o

$(OBJDIR_RELEASE)/IterativeClosestPoint.o: IterativeClosestPoint.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c IterativeClosestPoint.cpp -o $(OBJDIR_RELEASE)/IterativeClosestPoint.o

$(OBJDIR_RELEASE)/inputParams.o: inputParams.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c inputParams.cpp -o $(OBJDIR_RELEASE)/inputParams.o

$(OBJDIR_RELEASE)/loggingHelper.o: loggingHelper.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c loggingHelper.cpp -o $(OBJDIR_RELEASE)/loggingHelper.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/measurementDataContainer.o: measurementDataContainer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c measurementDataContainer.cpp -o $(OBJDIR_RELEASE)/measurementDataContainer.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

